replicaCount: 1

image:
  repository: nginx
  tag: "latest"

# Agent Config
env:
  BEDROCK_MODEL_ID: "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
  OAUTH_JWKS_URL: "https://idp-to-be-replaced"
mcp:
  mcp.json: |
    {
      "mcpServers": {
        "weather-mcp-stdio": {
          "disabled": false,
          "command": "uvx",
          "args": [
            "--from",
            ".",
            "--directory",
            "mcp-servers/weather-mcp-server",
            "mcp-server",
            "--transport",
            "stdio"
          ],
          "env": {
            "DEBUG": "1",
            "LOG_LEVEL": "INFO"
          }
        },
        "weather-mcp-http": {
          "disabled": true,
          "url": "http://weather-mcp:8080/mcp"
        }
      }
    }

agent: |
  # Weather Assistant Agent Configuration

  ## Agent Name
  Weather Assistant

  ## Agent Description
  Weather Assistant that provides weather forecasts(US City, State) and alerts(US State)

  ## System Prompt
  You are Weather Assistant that helps the user with forecasts or alerts:
  - Provide weather forecasts for US cities for the next 3 days if no specific period is mentioned
  - When returning forecasts, always include whether the weather is good for outdoor activities for each day
  - Provide information about weather alerts for US cities when requested

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "weather-agent"

podAnnotations: {}

podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP

resources: {}

livenessProbe:
  tcpSocket:
    port: 3000
readinessProbe:
  tcpSocket:
    port: 3000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

ingressClass:
  create: true
  parameters:
    create: false

ingresses:
  - name: fastapi
    annotations:
      alb.ingress.kubernetes.io/group.name: weather-agent
      alb.ingress.kubernetes.io/scheme: internet-facing
    paths:
      - path: /
        pathType: Prefix
    service:
      port: { name: fastapi, number: 3000 }

  - name: mcp
    annotations:
      alb.ingress.kubernetes.io/group.name: weather-agent
    paths:
      - path: /mcp
        pathType: Prefix
    service:
      port: { name: mcp, number: 8080 }

  - name: a2a
    annotations:
      alb.ingress.kubernetes.io/group.name: weather-agent
    paths:
      - path: /a2a
        pathType: Prefix
    service:
      port: { name: a2a, number: 9000 }